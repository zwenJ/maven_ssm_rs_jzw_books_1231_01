<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzw.book.mapper.BooksMapper">

  <resultMap id="BaseResultMap" type="com.jzw.book.model.Books">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
    <result column="book_price" jdbcType="DECIMAL" property="bookPrice" />
    <result column="book_concern" jdbcType="VARCHAR" property="bookConcern" />
    <result column="book_details" jdbcType="VARCHAR" property="bookDetails" />
    <result column="book_date" jdbcType="TIMESTAMP" property="bookDate" />
    <result column="book_stock" jdbcType="INTEGER" property="bookStock" />
    <result column="book_status" jdbcType="INTEGER" property="bookStatus" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
  </resultMap>

  <sql id="Table_A">
    b_books as A
  </sql>
  <sql id="Base_Column_List">
    A.book_id, A.book_name, A.book_author, A.book_price, A.book_concern, A.book_details, A.book_date,
    A.book_stock, A.book_status, A.type_id, A.shop_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from <include refid="Table_A"/>
    where A.book_id = #{bookId,jdbcType=INTEGER}
  </select>


    <!-- 条件查询 -->
    <select useCache="true" id="showBooks" resultMap="BaseResultMap" parameterType="com.jzw.book.util.PageBean">
      SELECT <include refid="Base_Column_List"/>
      FROM
      <include refid="Table_A"/>
      <if test="mtod">
       INNER JOIN b_orders_details as B ON A.book_id = B.book_id
      </if>
      WHERE A.book_status = #{status}
      <trim prefix="and" suffixOverrides="AND">
        <!-- 按类型查询 -->
        <if test="bookType != null and bookType != 0">
          A.type_id = #{bookType} AND
        </if>
        <if test="likeText != null and likeText != ''">
             A.book_name LIKE '%${likeText}%'
          OR A.book_author LIKE '%${likeText}%'
          OR A.book_concern LIKE '%${likeText}%'
          AND
        </if>
      </trim>
      <if test="mtod">
        GROUP BY B.book_id
        ORDER BY SUM(B.od_sum) DESC limit 0,5
      </if>
      <if test="recently">
        <!-- mtod 查询最近的数据 -->
        ORDER BY A.book_date DESC limit 0,5
      </if>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    delete from b_books
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jzw.book.model.Books">
    insert into b_books (book_id, book_name, book_author, 
      book_price, book_concern, book_details, 
      book_date, book_stock, book_status, 
      type_id, shop_id)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookAuthor,jdbcType=VARCHAR}, 
      #{bookPrice,jdbcType=DECIMAL}, #{bookConcern,jdbcType=VARCHAR}, #{bookDetails,jdbcType=VARCHAR}, 
      #{bookDate,jdbcType=TIMESTAMP}, #{bookStock,jdbcType=INTEGER}, #{bookStatus,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER})
  </insert>


  <insert id="insertSelective" parameterType="com.jzw.book.model.Books">
    insert into b_books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookAuthor != null">
        book_author,
      </if>
      <if test="bookPrice != null">
        book_price,
      </if>
      <if test="bookConcern != null">
        book_concern,
      </if>
      <if test="bookDetails != null">
        book_details,
      </if>
      <if test="bookDate != null">
        book_date,
      </if>
      <if test="bookStock != null">
        book_stock,
      </if>
      <if test="bookStatus != null">
        book_status,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null">
        #{bookPrice,jdbcType=DECIMAL},
      </if>
      <if test="bookConcern != null">
        #{bookConcern,jdbcType=VARCHAR},
      </if>
      <if test="bookDetails != null">
        #{bookDetails,jdbcType=VARCHAR},
      </if>
      <if test="bookDate != null">
        #{bookDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bookStock != null">
        #{bookStock,jdbcType=INTEGER},
      </if>
      <if test="bookStatus != null">
        #{bookStatus,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.jzw.book.model.Books">
    update b_books
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null">
        book_price = #{bookPrice,jdbcType=DECIMAL},
      </if>
      <if test="bookConcern != null">
        book_concern = #{bookConcern,jdbcType=VARCHAR},
      </if>
      <if test="bookDetails != null">
        book_details = #{bookDetails,jdbcType=VARCHAR},
      </if>
      <if test="bookDate != null">
        book_date = #{bookDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bookStock != null">
        book_stock = #{bookStock,jdbcType=INTEGER},
      </if>
      <if test="bookStatus != null">
        book_status = #{bookStatus,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>

  <!-- 修改商品的库存 -->
  <update id="updateByPrimaryKey" parameterType="com.jzw.book.model.Books">
    update b_books
    set book_stock = #{bookStock,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>

</mapper>