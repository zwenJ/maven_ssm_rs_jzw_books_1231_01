<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzw.book.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.jzw.book.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_number" jdbcType="VARCHAR" property="userNumber" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="role_id" jdbcType="INTEGER" property="roleId"/>
  </resultMap>

  <sql id="Base_Column_List">
    user_id, user_number, user_pwd, user_name, user_phone, role_id
  </sql>

  <sql id="Base_Select">
    SELECT <include refid="Base_Column_List"/> FROM b_user
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <!-- 用户登陆的查询 -->
    <select id="logins" resultMap="BaseResultMap" parameterType="com.jzw.book.model.Users">
       <include refid="Base_Select"/>
       <trim prefix="where" suffixOverrides="and">
         <if test="userPwd != null">
           user_pwd = #{userPwd,jdbcType=VARCHAR} AND
         </if>
         <if test="userName != null">
           user_name = #{userName, jdbcType=VARCHAR} AND
         </if>
         <if test="userName == null and userNumber != null">
           user_number = #{userNumber, jdbcType=VARCHAR} AND
         </if>
       </trim>
    </select>

  <!-- 判断某个字段的值是否存在 -->
  <select id="checkExist" resultType="integer" parameterType="map">
    SELECT count(*) from b_user
    WHERE
    <if test="strCol != null and strCol != ''">
      ${strCol} = #{strVal}
    </if>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    delete from b_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <!-- 注册一个用户 , 默认为普通用户-->
  <!--  keyColumn="user_id"  :  (( 仅 对 insert 和update有 用 ) 这 会 告 诉 MyBatis 使 用 JDBC 的 getGeneratedKeys 方法来取出由数据(比如:像 MySQL 和 SQL Server 这样的数据库管理系统的自动递增字段)内部生成的主键。默认值:false。)
        keyProperty="userId"  :  ((仅对 insert和update有用) 标记一个属性, MyBatis会通过 getGeneratedKeys 或者通过 insert 语句的 selectKey 子元素设置它的值。默认: 不设置。)
        useGeneratedKeys="true"  :  ((仅对 insert和update有用) 标记一个属性, MyBatis会通过 getGeneratedKeys 或者通过 insert 语句的 selectKey 子元素设置它的值。默认: 不设置。)
  -->
  <insert id="insert" parameterType="com.jzw.book.model.Users" keyColumn="user_id" keyProperty="userId" useGeneratedKeys="true">
    insert into b_user (user_number, user_pwd,
      user_name, user_phone)
    values (#{userNumber,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR});
  </insert>

  <insert id="insertSelective" parameterType="com.jzw.book.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    insert into b_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNumber != null">
        user_number,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNumber != null">
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.jzw.book.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    update b_user
    <set>
      <if test="userNumber != null">
        user_number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jzw.book.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Dec 31 13:41:06 CST 2017.
    -->
    update b_user
    set user_number = #{userNumber,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>