package com.jzw.book.mapper;

import com.jzw.book.model.Types;
import org.springframework.cache.annotation.Cacheable;

import java.util.List;

public interface TypesMapper {

    int deleteByPrimaryKey(Integer typeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_type
     *
     * @mbg.generated Sun Dec 31 13:41:06 CST 2017
     */
    int insert(Types record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_type
     *
     * @mbg.generated Sun Dec 31 13:41:06 CST 2017
     */
    int insertSelective(Types record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_type
     *
     * @mbg.generated Sun Dec 31 13:41:06 CST 2017
     */
    Types selectByPrimaryKey(Integer typeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_type
     *
     * @mbg.generated Sun Dec 31 13:41:06 CST 2017
     */
    int updateByPrimaryKeySelective(Types record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_type
     *
     * @mbg.generated Sun Dec 31 13:41:06 CST 2017
     */
    int updateByPrimaryKey(Types record);


    /**
     * 查询的时候进行缓存，如果缓存没有数据则从数据库中读
     * @return
     */
    @Cacheable(value = "types", condition = "true")
    public List<Types> showAll();

}