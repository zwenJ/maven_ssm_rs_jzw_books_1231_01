<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jzw.book</groupId>
  <artifactId>maven_ssm_rs_jzw_books_1231_01</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>maven_ssm_rs_jzw_books_1231_01 Maven Webapp</name>
  <url>http://maven.apache.org</url>


  <properties>
    <!-- 工程编码 -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <argLine>-Dfile.encoding=UTF-8</argLine>
    <!-- 版本控制 -->
      <jdk.version>1.8</jdk.version>
      <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>


    <!-- MyBatis及数据库相关 -->
      <mybatis.version>3.4.5</mybatis.version>
      <mgmp.version>1.3.5</mgmp.version>
      <mybatis-pagehelper>5.1.2</mybatis-pagehelper>
      <mybatis-spring.version>1.3.1</mybatis-spring.version>
      <mysql.version>5.1.43</mysql.version>

    <!-- spring相关 -->
      <!-- spring核心包 -->
        <spring.version>5.0.2.RELEASE</spring.version>
      <!-- spring整合数据库相关的jar包 -->
        <spring-data.version>2.0.2.RELEASE</spring-data.version>


    <!-- 日志文件相关 -->
      <log4j.version>2.9.1</log4j.version>
      <slf4j.version>1.7.25</slf4j.version>

    <!-- 基本工具相关 -->
      <fastjson.version>1.2.41</fastjson.version>
      <jstl.version>1.2</jstl.version>
      <junit.version>4.12</junit.version>
      <servlet.version>4.0.0</servlet.version>


    <!-- 数据源相关 -->
      <!-- Druid数据源 -->
      <druid.version>1.1.6</druid.version>

    <!-- springmvc上传文件的插件 -->
      <commons-io.version>2.5</commons-io.version>
      <commons-fileupload.version>1.3.3</commons-fileupload.version>

    <!-- 缓存数据库相关 -->
      <!-- MongoDB相关 -->
        <mongodb-java-driver.version>3.6.1</mongodb-java-driver.version>
      <!-- redis相关 -->
        <jedis.version>2.9.0</jedis.version>
        <commons-pool2.version>2.4.2</commons-pool2.version>

    <!-- Shiro权限认证相关 -->
      <shiro.version>1.3.2</shiro.version>

    <!-- jackson  -->
      <jackson.version>2.9.3</jackson.version>

  </properties>


  <dependencies>

    <!-- JUNIT and SERVLET 基础包 -->
    <!-- junit 测试包 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- servlet-api  -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- ******************************************************** -->
    <!-- spring相关jar包 -->
    <!-- spring-context -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring-core -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring-webmvc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring-web -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring-aspects 切面 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring-orm 对象关系映射 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring test相关依赖 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- ******************************************************** -->
    <!-- mybatis-core 及数据库连接驱动包 -->
    <!-- mybatis -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>

    <!-- mysql -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>

    <!-- mybatis的分页插件 -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>${mybatis-pagehelper}</version>
    </dependency>

    <!-- spring托管mybatis的中间包 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>

    <!-- Druid德鲁伊数据源Aliyun开源项目 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <!-- ******************************************************** -->

    <!-- **********************  日志配置  ********************** -->
    <!-- **********************  日志配置  ********************** -->
    <!--记得修改mybatis.cfg.xml添加如下内容-->
    <!--<setting name="logImpl" value="SLF4J"/>-->
    <!-- log配置：Log4j2 + Slf4j -->
    <!-- slf4j核心包-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!--核心log4j2jar包-->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!--用于与slf4j保持桥接-->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!--web工程需要包含log4j-web，非web工程不需要-->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <version>${log4j.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!--需要使用log4j2的AsyncLogger需要包含disruptor-->
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.2.0</version>
    </dependency>

    <!-- ***************************************************************** -->

    <!-- 其他的工具包 -->
    <!-- fastjson -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>

    <!-- jsp标签库 我们一般定义为c标签 -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>

    <!-- 自定义标签的依赖包
        注意版本跟Tomcatb保持一致    -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jsp-api</artifactId>
      <version>9.0.2</version>
    </dependency>


    <!-- spring文件上传依赖的jar包
            commons-io
            commons-fileupload
          apache旗下的，struts2中我们用过
    -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
    </dependency>

    <!-- ***********使用Redis缓存数据库*************************** -->
    <!-- redis客户端程序 -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>${commons-pool2.version}</version>
    </dependency>

    <!-- spring整合redis的中间件 -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
      <version>1.8.1.RELEASE</version>
    </dependency>

    <!-- shiro相关的依赖 -->
      <!-- 核心 -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <!-- 基于Web的应用程序的支持 -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-web</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <!-- 启用Shiro AOP和Annotations的AspectJ支持 -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-aspectj</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <!-- 启用Spring Framework集成。 -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-spring</artifactId>
        <version>${shiro.version}</version>
      </dependency>


     <!-- jackson : spring返回json字符串的依赖 -->
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>${jackson.version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>${jackson.version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
          <version>${jackson.version}</version>
        </dependency>

     <!--  JSR303验证依赖 Hibernate -->
        <dependency>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
          <version>2.0.1.Final</version>
        </dependency>
        <!-- JSR 303 的Hibernater-validator 扩展 -->
        <dependency>
          <groupId>org.hibernate.validator</groupId>
          <artifactId>hibernate-validator</artifactId>
          <version>6.0.7.Final</version>
        </dependency>

  </dependencies>


  <build>
    <finalName>maven_ssm_rs_jzw_books_1231_01</finalName>
    <plugins>
      <plugin>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-maven-plugin</artifactId>
        <version>${mgmp.version}</version>
        <!-- 指定使用特点的资源文件 -->
        <configuration>
          <configurationFile>src/main/resources/generator-config.xml</configurationFile>
          <verbose>true</verbose>
          <overwrite>true</overwrite>
        </configuration>
      </plugin>

      <!-- 指定maven的版本及jdk的版本 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

    </plugins>
    <!-- 避免Maven在打包的时候过滤掉src目录下的xml、properties文件
            **/*.xml  迭代的意思  迭代 src/main/java 路径下的所有xml文件
    -->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
        <filtering>false</filtering>
      </resource>
      <!--解决mybatis-generator-maven-plugin运行时没有将jdbc.properites文件放入target文件夹的问题-->
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>*.properties</include>
          <include>*.xml</include>
        </includes>
      </resource>
    </resources>
  </build>
</project>
